// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: a4bhUrqWbeGH9fzcN7EwNU
// Component: wfQfo5hy_L
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import SideBar from "../../SideBar"; // plasmic-import: O1BbL9l8IH/component
import MenuItem from "../../MenuItem"; // plasmic-import: 7MQ4xCpNiH/component
import Navbar from "../../Navbar"; // plasmic-import: LEgvBeEm_U/component
import { Modal } from "@chakra-ui/react"; // plasmic-import: XqREBLaZkFt/codeComponent
import WalletConnectContent from "../../WalletConnectContent"; // plasmic-import: aO3TpOHk3M/component
import WalletConnectItem from "../../WalletConnectItem"; // plasmic-import: ajlQM03Cp6/component
import { Avatar } from "@chakra-ui/react"; // plasmic-import: kpaNHoMO6b/codeComponent
import { AvatarBadge } from "@chakra-ui/react"; // plasmic-import: SNJRDQ3EZG/codeComponent
import { Heading } from "@chakra-ui/react"; // plasmic-import: By0uZvvYZc/codeComponent
import AssetContainer from "../../AssetContainer"; // plasmic-import: BmAeYsXCwH/component
import AssetItems from "../../AssetItems"; // plasmic-import: _3xOiX4pKP/component

import { useScreenVariants as useScreenVariantsstxKh81JHuQc } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: Stx-Kh81jHuQC/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_defibridge.module.css"; // plasmic-import: a4bhUrqWbeGH9fzcN7EwNU/projectcss
import sty from "./PlasmicProfile.module.css"; // plasmic-import: wfQfo5hy_L/css

import HomeFillSvgrepoComsvgIcon from "./icons/PlasmicIcon__HomeFillSvgrepoComsvg"; // plasmic-import: apLhSwR1Ut/icon
import ImageSvgrepoComsvgIcon from "./icons/PlasmicIcon__ImageSvgrepoComsvg"; // plasmic-import: -pLceZx7Ap/icon
import BankSvgrepoComsvgIcon from "./icons/PlasmicIcon__BankSvgrepoComsvg"; // plasmic-import: 8vPsLM-P6Z/icon
import ProfileUserSvgrepoComsvgIcon from "./icons/PlasmicIcon__ProfileUserSvgrepoComsvg"; // plasmic-import: Figa9KsMcR/icon
import WalletSvgrepoCom1SvgIcon from "./icons/PlasmicIcon__WalletSvgrepoCom1Svg"; // plasmic-import: pjXsPF_9F9/icon

export type PlasmicProfile__VariantMembers = {};

export type PlasmicProfile__VariantsArgs = {};
type VariantPropType = keyof PlasmicProfile__VariantsArgs;
export const PlasmicProfile__VariantProps = new Array<VariantPropType>();

export type PlasmicProfile__ArgsType = {};
type ArgPropType = keyof PlasmicProfile__ArgsType;
export const PlasmicProfile__ArgProps = new Array<ArgPropType>();

export type PlasmicProfile__OverridesType = {
  root?: p.Flex<"div">;
  sideBar?: p.Flex<typeof SideBar>;
  navbar?: p.Flex<typeof Navbar>;
  modal?: p.Flex<typeof Modal>;
  walletConnectContent?: p.Flex<typeof WalletConnectContent>;
  content2?: p.Flex<"div">;
  items?: p.Flex<"div">;
  items2?: p.Flex<"div">;
  items3?: p.Flex<"div">;
  items4?: p.Flex<"div">;
  avatar?: p.Flex<typeof Avatar>;
  avatarBadge?: p.Flex<typeof AvatarBadge>;
  content?: p.Flex<"div">;
};

export interface DefaultProfileProps {}

function PlasmicProfile__RenderFunc(props: {
  variants: PlasmicProfile__VariantsArgs;
  args: PlasmicProfile__ArgsType;
  overrides: PlasmicProfile__OverridesType;

  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(
    () =>
      Object.assign(
        {},

        props.args
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsstxKh81JHuQc()
  });

  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <div className={classNames(projectcss.all, sty.freeBox__sEbe)}>
            {(
              hasVariant(globalVariants, "screen", "mobileOnly") ? true : true
            ) ? (
              <SideBar
                data-plasmic-name={"sideBar"}
                data-plasmic-override={overrides.sideBar}
                className={classNames("__wab_instance", sty.sideBar)}
                menus={
                  <React.Fragment>
                    <MenuItem
                      button={
                        <React.Fragment>
                          <HomeFillSvgrepoComsvgIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__ks2Pv
                            )}
                            role={"img"}
                          />

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__fWwOz
                            )}
                          >
                            {"Home"}
                          </div>
                        </React.Fragment>
                      }
                      className={classNames(
                        "__wab_instance",
                        sty.menuItem___8Gu8F
                      )}
                    />

                    <MenuItem
                      button={
                        <React.Fragment>
                          <ImageSvgrepoComsvgIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__eQuZi
                            )}
                            role={"img"}
                          />

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__h91Nc
                            )}
                          >
                            {"NFTs"}
                          </div>
                        </React.Fragment>
                      }
                      className={classNames(
                        "__wab_instance",
                        sty.menuItem__xMC4
                      )}
                    />

                    <MenuItem
                      button={
                        <React.Fragment>
                          <BankSvgrepoComsvgIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__wrXg
                            )}
                            role={"img"}
                          />

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__h91Nc
                            )}
                          >
                            {"Defi"}
                          </div>
                        </React.Fragment>
                      }
                      className={classNames(
                        "__wab_instance",
                        sty.menuItem__ycc4C
                      )}
                    />

                    <MenuItem
                      button={
                        <React.Fragment>
                          <ProfileUserSvgrepoComsvgIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__yITbp
                            )}
                            role={"img"}
                          />

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___6CXw
                            )}
                          >
                            {"Profile"}
                          </div>
                        </React.Fragment>
                      }
                      className={classNames(
                        "__wab_instance",
                        sty.menuItem__zUtdV
                      )}
                      isActive={true}
                    />
                  </React.Fragment>
                }
              />
            ) : null}

            <div className={classNames(projectcss.all, sty.freeBox__juuAm)}>
              <Navbar
                data-plasmic-name={"navbar"}
                data-plasmic-override={overrides.navbar}
                className={classNames("__wab_instance", sty.navbar)}
                isConnected={true}
                rightMenu={
                  <Modal
                    data-plasmic-name={"modal"}
                    data-plasmic-override={overrides.modal}
                    body={
                      <WalletConnectContent
                        data-plasmic-name={"walletConnectContent"}
                        data-plasmic-override={overrides.walletConnectContent}
                        className={classNames(
                          "__wab_instance",
                          sty.walletConnectContent
                        )}
                      >
                        <div
                          data-plasmic-name={"content2"}
                          data-plasmic-override={overrides.content2}
                          className={classNames(projectcss.all, sty.content2)}
                        >
                          <div
                            data-plasmic-name={"items"}
                            data-plasmic-override={overrides.items}
                            className={classNames(projectcss.all, sty.items)}
                          >
                            <WalletConnectItem
                              buttonWallet={
                                <React.Fragment>
                                  <p.PlasmicImg
                                    alt={""}
                                    className={classNames(sty.img__rNVeP)}
                                    displayHeight={"24px" as const}
                                    displayMaxHeight={"none" as const}
                                    displayMaxWidth={"100%" as const}
                                    displayMinHeight={"0" as const}
                                    displayMinWidth={"0" as const}
                                    displayWidth={"24px" as const}
                                    loading={"lazy" as const}
                                    src={{
                                      src: "/plasmic/defibridge/images/metaMaskFoxsvgpng.png",
                                      fullWidth: 800,
                                      fullHeight: 800,
                                      aspectRatio: undefined
                                    }}
                                  />

                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text__qt2JV
                                    )}
                                  >
                                    {"Metamask"}
                                  </div>
                                </React.Fragment>
                              }
                              className={classNames(
                                "__wab_instance",
                                sty.walletConnectItem__oQccc
                              )}
                            />
                          </div>

                          <div
                            data-plasmic-name={"items2"}
                            data-plasmic-override={overrides.items2}
                            className={classNames(projectcss.all, sty.items2)}
                          >
                            <WalletConnectItem
                              buttonWallet={
                                <React.Fragment>
                                  <p.PlasmicImg
                                    alt={""}
                                    className={classNames(sty.img___4V21)}
                                    displayHeight={"24px" as const}
                                    displayMaxHeight={"none" as const}
                                    displayMaxWidth={"100%" as const}
                                    displayMinHeight={"0" as const}
                                    displayMinWidth={"0" as const}
                                    displayWidth={"24px" as const}
                                    loading={"lazy" as const}
                                    src={{
                                      src: "/plasmic/defibridge/images/coinbaseCoinLogoC86F46D7B8Seeklogocompng.png",
                                      fullWidth: 300,
                                      fullHeight: 300,
                                      aspectRatio: undefined
                                    }}
                                  />

                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text__eVdr
                                    )}
                                  >
                                    {"Wallet Name"}
                                  </div>
                                </React.Fragment>
                              }
                              className={classNames(
                                "__wab_instance",
                                sty.walletConnectItem__ng9Ds
                              )}
                            />
                          </div>

                          <div
                            data-plasmic-name={"items3"}
                            data-plasmic-override={overrides.items3}
                            className={classNames(projectcss.all, sty.items3)}
                          >
                            <WalletConnectItem
                              buttonWallet={
                                <React.Fragment>
                                  <p.PlasmicImg
                                    alt={""}
                                    className={classNames(sty.img__lWpi4)}
                                    displayHeight={"24px" as const}
                                    displayMaxHeight={"none" as const}
                                    displayMaxWidth={"100%" as const}
                                    displayMinHeight={"0" as const}
                                    displayMinWidth={"0" as const}
                                    displayWidth={"24px" as const}
                                    loading={"lazy" as const}
                                    src={{
                                      src: "/plasmic/defibridge/images/walletconnectLogoEe83B50C97Seeklogocompng.png",
                                      fullWidth: 300,
                                      fullHeight: 300,
                                      aspectRatio: undefined
                                    }}
                                  />

                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text__kpyea
                                    )}
                                  >
                                    {"Wallet Connect"}
                                  </div>
                                </React.Fragment>
                              }
                              className={classNames(
                                "__wab_instance",
                                sty.walletConnectItem__xk3EC
                              )}
                            />
                          </div>

                          <div
                            data-plasmic-name={"items4"}
                            data-plasmic-override={overrides.items4}
                            className={classNames(projectcss.all, sty.items4)}
                          >
                            <WalletConnectItem
                              buttonWallet={
                                <React.Fragment>
                                  <p.PlasmicImg
                                    alt={""}
                                    className={classNames(sty.img___8Op8T)}
                                    displayHeight={"24px" as const}
                                    displayMaxHeight={"none" as const}
                                    displayMaxWidth={"100%" as const}
                                    displayMinHeight={"0" as const}
                                    displayMinWidth={"0" as const}
                                    displayWidth={"24px" as const}
                                    loading={"lazy" as const}
                                    src={{
                                      src: "/plasmic/defibridge/images/walletsvg.svg",
                                      fullWidth: 150,
                                      fullHeight: 150,
                                      aspectRatio: 1
                                    }}
                                  />

                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text__aw1Ah
                                    )}
                                  >
                                    {"Torus"}
                                  </div>
                                </React.Fragment>
                              }
                              className={classNames(
                                "__wab_instance",
                                sty.walletConnectItem__b2Q25
                              )}
                            />
                          </div>
                        </div>
                      </WalletConnectContent>
                    }
                    buttonCTACaption={"Gasskeun" as const}
                    buttonCaption={"Connect Wallet" as const}
                    buttonCloseCaption={"Close" as const}
                    className={classNames("__wab_instance", sty.modal)}
                    headerText={"Available Wallets" as const}
                  />
                }
              />

              <div className={classNames(projectcss.all, sty.freeBox__j3N8Z)}>
                <div className={classNames(projectcss.all, sty.freeBox__mLl01)}>
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__cb3OV)}
                  >
                    <Avatar
                      data-plasmic-name={"avatar"}
                      data-plasmic-override={overrides.avatar}
                      className={classNames("__wab_instance", sty.avatar)}
                      name={"Kola Tioluwani" as const}
                      size={"xl" as const}
                      src={"https://bit.ly/dan-abramov" as const}
                    >
                      {true ? (
                        <AvatarBadge
                          data-plasmic-name={"avatarBadge"}
                          data-plasmic-override={overrides.avatarBadge}
                          bg={"green.500" as const}
                          boxSize={"1.25em" as const}
                          className={classNames(
                            "__wab_instance",
                            sty.avatarBadge
                          )}
                        />
                      ) : null}
                    </Avatar>

                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__fW9Av)}
                    >
                      <Heading
                        className={classNames(
                          "__wab_instance",
                          sty.heading__bQfs6
                        )}
                        noOfLines={1 as const}
                        size={"md" as const}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__rFarb
                          )}
                        >
                          {"0x95df...9605"}
                        </div>
                      </Heading>

                      <Heading
                        className={classNames(
                          "__wab_instance",
                          sty.heading__uCpxY
                        )}
                        noOfLines={1 as const}
                        size={"xs" as const}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__mLjE
                          )}
                        >
                          {"0x95df...9605"}
                        </div>
                      </Heading>

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__bUIU
                        )}
                      >
                        <WalletSvgrepoCom1SvgIcon
                          className={classNames(projectcss.all, sty.svg__oedt9)}
                          role={"img"}
                        />

                        <Heading
                          className={classNames(
                            "__wab_instance",
                            sty.heading__wZmNu
                          )}
                          noOfLines={1 as const}
                          size={"xs" as const}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__taIZd
                            )}
                          >
                            {"$$2,394.78"}
                          </div>
                        </Heading>
                      </p.Stack>
                    </p.Stack>
                  </p.Stack>
                </div>
              </div>

              <p.Stack
                as={"div"}
                data-plasmic-name={"content"}
                data-plasmic-override={overrides.content}
                hasGap={true}
                className={classNames(projectcss.all, sty.content)}
              >
                <AssetContainer
                  className={classNames(
                    "__wab_instance",
                    sty.assetContainer__sVvwT
                  )}
                  header={
                    <React.Fragment>
                      <Heading
                        className={classNames(
                          "__wab_instance",
                          sty.heading__or0Nf
                        )}
                        noOfLines={1 as const}
                        size={"md" as const}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__ud8Rl
                          )}
                        >
                          {"Asset"}
                        </div>
                      </Heading>

                      <Heading
                        className={classNames(
                          "__wab_instance",
                          sty.heading___8BGA
                        )}
                        noOfLines={1 as const}
                        size={"md" as const}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__fzyc2
                          )}
                        >
                          {"$23.76"}
                        </div>
                      </Heading>
                    </React.Fragment>
                  }
                  items={
                    <React.Fragment>
                      <AssetItems
                        className={classNames(
                          "__wab_instance",
                          sty.assetItems__rCtxR
                        )}
                      />

                      <AssetItems
                        className={classNames(
                          "__wab_instance",
                          sty.assetItems__rb7
                        )}
                      />

                      <AssetItems
                        className={classNames(
                          "__wab_instance",
                          sty.assetItems___3T6P2
                        )}
                      />

                      <AssetItems
                        className={classNames(
                          "__wab_instance",
                          sty.assetItems__e0KxB
                        )}
                      />
                    </React.Fragment>
                  }
                />

                <AssetContainer
                  className={classNames(
                    "__wab_instance",
                    sty.assetContainer__etSlO
                  )}
                  header={
                    <React.Fragment>
                      <Heading
                        className={classNames(
                          "__wab_instance",
                          sty.heading___9Vkuo
                        )}
                        noOfLines={1 as const}
                        size={"md" as const}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__k2FDk
                          )}
                        >
                          {"Uniswap v2"}
                        </div>
                      </Heading>

                      <Heading
                        className={classNames(
                          "__wab_instance",
                          sty.heading__rrXgl
                        )}
                        noOfLines={1 as const}
                        size={"md" as const}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___7XuBr
                          )}
                        >
                          {"$23.76"}
                        </div>
                      </Heading>
                    </React.Fragment>
                  }
                  items={
                    <AssetItems
                      className={classNames(
                        "__wab_instance",
                        sty.assetItems___1Lhhg
                      )}
                    >
                      <Heading
                        className={classNames(
                          "__wab_instance",
                          sty.heading__vshli
                        )}
                        noOfLines={1 as const}
                        size={"sm" as const}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__qxCex
                          )}
                        >
                          {"DAI / WETH"}
                        </div>
                      </Heading>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__aoWvu
                        )}
                      >
                        {"$0.94"}
                      </div>
                    </AssetItems>
                  }
                />
              </p.Stack>
            </div>
          </div>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "sideBar",
    "navbar",
    "modal",
    "walletConnectContent",
    "content2",
    "items",
    "items2",
    "items3",
    "items4",
    "avatar",
    "avatarBadge",
    "content"
  ],
  sideBar: ["sideBar"],
  navbar: [
    "navbar",
    "modal",
    "walletConnectContent",
    "content2",
    "items",
    "items2",
    "items3",
    "items4"
  ],
  modal: [
    "modal",
    "walletConnectContent",
    "content2",
    "items",
    "items2",
    "items3",
    "items4"
  ],
  walletConnectContent: [
    "walletConnectContent",
    "content2",
    "items",
    "items2",
    "items3",
    "items4"
  ],
  content2: ["content2", "items", "items2", "items3", "items4"],
  items: ["items"],
  items2: ["items2"],
  items3: ["items3"],
  items4: ["items4"],
  avatar: ["avatar", "avatarBadge"],
  avatarBadge: ["avatarBadge"],
  content: ["content"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  sideBar: typeof SideBar;
  navbar: typeof Navbar;
  modal: typeof Modal;
  walletConnectContent: typeof WalletConnectContent;
  content2: "div";
  items: "div";
  items2: "div";
  items3: "div";
  items4: "div";
  avatar: typeof Avatar;
  avatarBadge: typeof AvatarBadge;
  content: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicProfile__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicProfile__VariantsArgs;
    args?: PlasmicProfile__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicProfile__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicProfile__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicProfile__ArgProps,
          internalVariantPropNames: PlasmicProfile__VariantProps
        }),
      [props, nodeName]
    );

    return PlasmicProfile__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicProfile";
  } else {
    func.displayName = `PlasmicProfile.${nodeName}`;
  }
  return func;
}

export const PlasmicProfile = Object.assign(
  // Top-level PlasmicProfile renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    sideBar: makeNodeComponent("sideBar"),
    navbar: makeNodeComponent("navbar"),
    modal: makeNodeComponent("modal"),
    walletConnectContent: makeNodeComponent("walletConnectContent"),
    content2: makeNodeComponent("content2"),
    items: makeNodeComponent("items"),
    items2: makeNodeComponent("items2"),
    items3: makeNodeComponent("items3"),
    items4: makeNodeComponent("items4"),
    avatar: makeNodeComponent("avatar"),
    avatarBadge: makeNodeComponent("avatarBadge"),
    content: makeNodeComponent("content"),

    // Metadata about props expected for PlasmicProfile
    internalVariantProps: PlasmicProfile__VariantProps,
    internalArgProps: PlasmicProfile__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicProfile;
/* prettier-ignore-end */
